;; Auto-generated. Do not edit!


(when (boundp 'lqrrt_ros::MoveResult)
  (if (not (find-package "LQRRT_ROS"))
    (make-package "LQRRT_ROS"))
  (shadow 'MoveResult (find-package "LQRRT_ROS")))
(unless (find-package "LQRRT_ROS::MOVERESULT")
  (make-package "LQRRT_ROS::MOVERESULT"))

(in-package "ROS")
;;//! \htmlinclude MoveResult.msg.html


(defclass lqrrt_ros::MoveResult
  :super ros::object
  :slots (_failure_reason ))

(defmethod lqrrt_ros::MoveResult
  (:init
   (&key
    ((:failure_reason __failure_reason) "")
    )
   (send-super :init)
   (setq _failure_reason (string __failure_reason))
   self)
  (:failure_reason
   (&optional __failure_reason)
   (if __failure_reason (setq _failure_reason __failure_reason)) _failure_reason)
  (:serialization-length
   ()
   (+
    ;; string _failure_reason
    4 (length _failure_reason)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _failure_reason
       (write-long (length _failure_reason) s) (princ _failure_reason s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _failure_reason
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _failure_reason (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get lqrrt_ros::MoveResult :md5sum-) "2de13b23a1f75564b266f8fcabfafba6")
(setf (get lqrrt_ros::MoveResult :datatype-) "lqrrt_ros/MoveResult")
(setf (get lqrrt_ros::MoveResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Result

string failure_reason


")



(provide :lqrrt_ros/MoveResult "2de13b23a1f75564b266f8fcabfafba6")


